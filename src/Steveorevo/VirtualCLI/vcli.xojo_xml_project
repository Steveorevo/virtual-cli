<?xml version="1.0" encoding="UTF-8"?>
<RBProject version="2014r2" FormatVersion="2" MinIDEVersion="20070100">
<block type="Project" ID="0">
 <ProjectSavedInVers>2014.02</ProjectSavedInVers>
 <MajorVersion>1</MajorVersion>
 <MinorVersion>0</MinorVersion>
 <SubVersion>0</SubVersion>
 <Release>0</Release>
 <NonRelease>45</NonRelease>
 <Region></Region>
 <ShortVersion>0.0.1</ShortVersion>
 <LongVersion>0.0.1</LongVersion>
 <InfoVersion></InfoVersion>
 <AutoIncVersion>1</AutoIncVersion>
 <DefaultViewID>0</DefaultViewID>
 <ProjectType>1</ProjectType>
 <DefaultLanguage>0</DefaultLanguage>
 <CurrentLanguage>0</CurrentLanguage>
 <DefaultEncoding>0</DefaultEncoding>
 <BuildFlags>20880</BuildFlags>
 <UseBuildsFolder>1</UseBuildsFolder>
 <WebApp>0</WebApp>
 <Icon>
 </Icon>
 <MacCreator></MacCreator>
 <BuildCarbonName>vcli</BuildCarbonName>
 <BuildCarbonMachOName>vcli</BuildCarbonMachOName>
 <BundleIdentifier>com.serverpress.vcli</BundleIdentifier>
 <WinMDICaption></WinMDICaption>
 <BuildWinName>vcli.exe</BuildWinName>
 <BuildWinMDI>0</BuildWinMDI>
 <BuildWinCompanyName>ServerPress</BuildWinCompanyName>
 <BuildWinProductName></BuildWinProductName>
 <BuildWinInternalName></BuildWinInternalName>
 <BuildWinFileDescription></BuildWinFileDescription>
 <UseGDIPlus>0</UseGDIPlus>
 <BuildLinuxX86Name>vcli</BuildLinuxX86Name>
 <BuildCarbonExecutableFormat>1</BuildCarbonExecutableFormat>
 <DebuggerCommandLine></DebuggerCommandLine>
</block>
<block type="Module" ID="712812485">
 <ObjName>App</ObjName>
 <ObjContainerID>0</ObjContainerID>
 <IsClass>1</IsClass>
 <Superclass>ConsoleApplication</Superclass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <IsApplicationObject>1</IsApplicationObject>
 <Compatibility></Compatibility>
 <HookInstance>
  <ItemName>Run</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Run(args() as String) As Integer</SourceLine>
   <SourceLine>// Define end of line marker</SourceLine>
   <SourceLine>App.EOL = Chr(13) + Chr(10) </SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Obtain command line options for port and security key</SourceLine>
   <SourceLine>Dim param As String =  System.CommandLine + " "</SourceLine>
   <SourceLine>If param.InStr("--port") &gt; 0 Then</SourceLine>
   <SourceLine>App.Port = Val(param.DelLeftMost("--port ").GetLeftMost(" "))</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine>If param.InStr("--security_key") &gt; 0 Then</SourceLine>
   <SourceLine>App.SecurityKey = param.DelLeftMost("--security_key ").GetLeftMost(" ")</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Create storage for our shell consoles</SourceLine>
   <SourceLine>App.Shells = New Dictionary</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Create our debug HTTP Server</SourceLine>
   <SourceLine>myHTTPServer = New cHTTPServer</SourceLine>
   <SourceLine>myHTTPServer.Port = App.Port</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Create our webapp to add to server</SourceLine>
   <SourceLine>myVCLI = New VCLI</SourceLine>
   <SourceLine>myHTTPServer.AddWebApp("/vcli", myVCLI)</SourceLine>
   <SourceLine>myHTTPServer.Listen</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>While Not App.ExitVCLI</SourceLine>
   <SourceLine>Process</SourceLine>
   <SourceLine>App.DoEvents 100</SourceLine>
   <SourceLine>Wend</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
 </HookInstance>
 <Method>
  <ItemName>Process</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Process()</SourceLine>
   <SourceLine>// Process commands</SourceLine>
   <SourceLine>For Each myVShell As VShell In App.Shells.Values</SourceLine>
   <SourceLine>If myVShell.State = VShell.RUNNING And myVShell.Paused = False Then</SourceLine>
   <SourceLine>If myVShell.Commands.Ubound &gt; -1 Then</SourceLine>
   <SourceLine>myVShell.LastCommand = myVShell.Commands(0)</SourceLine>
   <SourceLine>myVShell.Commands.Remove(0)</SourceLine>
   <SourceLine>myVShell.WaitFor = myVShell.Waits(0)</SourceLine>
   <SourceLine>myVShell.Waits.Remove(0)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Execute the command</SourceLine>
   <SourceLine>myVShell.TimeUp = myVShell.MaxTimeout</SourceLine>
   <SourceLine>If myVShell.IsRunning = False Then</SourceLine>
   <SourceLine>myVShell.Execute(myVShell.LastCommand.DelLeftMost("|"))</SourceLine>
   <SourceLine>Else</SourceLine>
   <SourceLine>myVShell.Write(myVShell.LastCommand.DelLeftMost("|"))</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Add command to top of results</SourceLine>
   <SourceLine>Dim nCommandIndex As Integer = myVShell.LastCommand.GetLeftMost("|").Val()</SourceLine>
   <SourceLine>myVShell.Results(nCommandIndex) = myVShell.Results(nCommandIndex) + myVShell.LastCommand.DelLeftMost("|")</SourceLine>
   <SourceLine>myVShell.LastResult = ""</SourceLine>
   <SourceLine>myVShell.State = VShell.PENDING</SourceLine>
   <SourceLine>Else</SourceLine>
   <SourceLine>Dim nCommandIndex As Integer = myVShell.LastCommand.GetLeftMost("|").Val()</SourceLine>
   <SourceLine>myVShell.State = VShell.DONE</SourceLine>
   <SourceLine>myVShell.IsDone = myVShell.IsDone + CStr(nCommandIndex) + ","</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Gather results from CLI</SourceLine>
   <SourceLine>Dim nCommandIndex As Integer = myVShell.LastCommand.GetLeftMost("|").Val()</SourceLine>
   <SourceLine>myVShell.LastResult = myVShell.ReadAll</SourceLine>
   <SourceLine>If myVShell.LastResult &lt;&gt; "" Then</SourceLine>
   <SourceLine>myVShell.Results(nCommandIndex) = myVShell.Results(nCommandIndex) + myVShell.LastResult</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Check for expected completion, wait, or timeout.</SourceLine>
   <SourceLine>If myVShell.State = VShell.PENDING And myVShell.WaitFor.IsNull = False Then</SourceLine>
   <SourceLine>Static lastSecond As Integer</SourceLine>
   <SourceLine>Dim d As New Date</SourceLine>
   <SourceLine>If myVShell.WaitFor.Type = Variant.TypeString Then</SourceLine>
   <SourceLine>If myVShell.LastResult.InStr(myVShell.WaitFor) &gt; 0 Then</SourceLine>
   <SourceLine>myVShell.State = VShell.RUNNING</SourceLine>
   <SourceLine>myVShell.WaitFor = Nil</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine>Else</SourceLine>
   <SourceLine>If lastSecond &lt;&gt; d.Second Then</SourceLine>
   <SourceLine>myVShell.WaitFor = myVShell.WaitFor - 1</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine>If  myVShell.WaitFor &lt;= 0 Then</SourceLine>
   <SourceLine>myVShell.State = VShell.RUNNING</SourceLine>
   <SourceLine>myVShell.WaitFor = Nil</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine>If myVShell.TimeUp &gt; 0 Then</SourceLine>
   <SourceLine>If lastSecond &lt;&gt; d.Second Then</SourceLine>
   <SourceLine>myVShell.TimeUp = myVShell.TimeUp - 1</SourceLine>
   <SourceLine>lastSecond = d.Second</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine>If myVShell.TimeUp = 0 Then</SourceLine>
   <SourceLine>myVShell.State = VShell.RUNNING</SourceLine>
   <SourceLine>myVShell.WaitFor = Nil</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine>Next</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Exit Sub</SourceLine>
   <SourceLine>Exception err as RuntimeException</SourceLine>
   <SourceLine>Print "Runtime exception in App.Process" + App.EOL</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Property>
  <ItemName>ExitVCLI</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>ExitVCLI As Boolean</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>ExitVCLI As Boolean = False</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>Shells</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Shells As Dictionary</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>Shells As Dictionary</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>myHTTPServer</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>myHTTPServer As cHTTPServer</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>myHTTPServer As cHTTPServer</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>myVCLI</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>myVCLI As VCLI</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>myVCLI As VCLI</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>SecurityKey</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>SecurityKey As String</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>SecurityKey As String = "HelloVCLI123"</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>Port</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Port As Integer</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>Port As Integer = 7088</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>EOL</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>EOL As String</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>EOL As String</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <PropertyVal Name="MenuBar"><Hex bytes="1">30</Hex></PropertyVal>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>ExitVCLI</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <PropertyValue>False</PropertyValue>
   <ItemType>Boolean</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>SecurityKey</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <PropertyValue>HelloVCLI123</PropertyValue>
   <ItemType>String</ItemType>
   <EditorType>MultiLineEditor</EditorType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Port</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <PropertyValue>7088</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>EOL</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>String</ItemType>
   <EditorType>MultiLineEditor</EditorType>
  </ViewProperty>
 </ViewBehavior>
</block>
<block type="BuildAutomation" ID="1575669235">
 <ObjName>Build Automation</ObjName>
 <ObjContainerID>0</ObjContainerID>
</block>
<block type="BuildStepsList" ID="1651998294">
 <ObjName>Linux</ObjName>
 <ObjContainerID>1575669235</ObjContainerID>
</block>
<block type="BuildProjectStep" ID="319272001">
 <ObjName>Build</ObjName>
 <ObjContainerID>1651998294</ObjContainerID>
</block>
<block type="BuildStepsList" ID="1590387407">
 <ObjName>Mac OS X</ObjName>
 <ObjContainerID>1575669235</ObjContainerID>
</block>
<block type="BuildProjectStep" ID="2059695693">
 <ObjName>Build</ObjName>
 <ObjContainerID>1590387407</ObjContainerID>
</block>
<block type="BuildStepsList" ID="2016623064">
 <ObjName>Windows</ObjName>
 <ObjContainerID>1575669235</ObjContainerID>
</block>
<block type="BuildProjectStep" ID="1796936500">
 <ObjName>Build</ObjName>
 <ObjContainerID>2016623064</ObjContainerID>
</block>
<block type="Folder" ID="2114636589">
 <ObjName>HTTP</ObjName>
 <ObjContainerID>0</ObjContainerID>
</block>
<block type="Module" ID="65136639">
 <ObjName>cClientSocket</ObjName>
 <ObjContainerID>2114636589</ObjContainerID>
 <IsClass>1</IsClass>
 <Superclass>TCPSocket</Superclass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <HookInstance>
  <ItemName>DataAvailable</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub DataAvailable()</SourceLine>
   <SourceLine>''System.DebugLog "ClientSocket DataAvailable " + Str(Me.Handle)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Get the incoming request from the client</SourceLine>
   <SourceLine>Static sData As String</SourceLine>
   <SourceLine>sData = sData + Me.ReadAll(Encodings.ASCII)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Strip out unecessary CR from Windows systems</SourceLine>
   <SourceLine>sData = ReplaceAll(sData, Chr(13), "")</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Validate the data or exit until we get more data</SourceLine>
   <SourceLine>If InStr(sData, Chr(10) + Chr(10)) = 0 Then Exit</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Parse the initial request line</SourceLine>
   <SourceLine>Dim myRequest As New cRequest</SourceLine>
   <SourceLine>Dim sLine As String</SourceLine>
   <SourceLine>Dim sPath As String</SourceLine>
   <SourceLine>sLine = sData.GetLeftMost(Chr(10)).Trim()</SourceLine>
   <SourceLine>myRequest.Method = sLine.GetLeftMost(" ")</SourceLine>
   <SourceLine>sLine = sLine.DelLeftMost(" ")</SourceLine>
   <SourceLine>sPath = sLine.GetLeftMost(" ")</SourceLine>
   <SourceLine>myRequest.Version = sLine.GetRightMost(" ")</SourceLine>
   <SourceLine>sData = sData.DelLeftMost(Chr(10))</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Parse the path of any query strings</SourceLine>
   <SourceLine>Dim sValue As String</SourceLine>
   <SourceLine>Dim sKey As String</SourceLine>
   <SourceLine>If InStr(sPath,"?") &gt; 0 Then</SourceLine>
   <SourceLine>myRequest.Path = sPath.GetLeftMost("?")</SourceLine>
   <SourceLine>sPath = sPath.DelLeftMost("?") + "&amp;"</SourceLine>
   <SourceLine>While InStr(sPath, "&amp;") &gt; 0</SourceLine>
   <SourceLine>sLine = sPath.GetLeftMost("&amp;")</SourceLine>
   <SourceLine>If InStr(sLine,"=") &gt; 0 Then</SourceLine>
   <SourceLine>sValue = DecodeURLComponent(sLine.DelLeftMost("="),Encodings.ASCII)</SourceLine>
   <SourceLine>sKey = DecodeURLComponent(sLine.GetLeftMost("="),Encodings.ASCII)</SourceLine>
   <SourceLine>Else</SourceLine>
   <SourceLine>sValue = DecodeURLComponent(sLine, Encodings.ASCII)</SourceLine>
   <SourceLine>sKey = ""</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine>myRequest.dictQuery.Value(sKey) = sValue</SourceLine>
   <SourceLine>sPath = sPath.DelLeftMost("&amp;")</SourceLine>
   <SourceLine>Wend</SourceLine>
   <SourceLine>Else</SourceLine>
   <SourceLine>myRequest.Path = sPath</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Parse out header lines</SourceLine>
   <SourceLine>Dim sHLines As String</SourceLine>
   <SourceLine>sHLines = sData.GetLeftMost(Chr(10)+Chr(10))</SourceLine>
   <SourceLine>While InStr(sHLines, ":") &gt; 0</SourceLine>
   <SourceLine>sKey = sHLines.GetLeftMost(":")</SourceLine>
   <SourceLine>sHLines = sHLines.DelLeftMost(":")</SourceLine>
   <SourceLine>sValue = sHLines.GetLeftMost(Chr(10))</SourceLine>
   <SourceLine>sHLines = sHLines.DelLeftMost(Chr(10))</SourceLine>
   <SourceLine>myRequest.dictHeader.Value(sKey) = sValue</SourceLine>
   <SourceLine>Wend</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Store remainder of payload as data</SourceLine>
   <SourceLine>sData = sData.DelLeftMost(Chr(10)+Chr(10))</SourceLine>
   <SourceLine>myRequest.Data = sData</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Parse out POST data into value/keys</SourceLine>
   <SourceLine>If myRequest.Method = "POST" And LenB(sData) &gt; 0 Then</SourceLine>
   <SourceLine>sData = sData + "&amp;"</SourceLine>
   <SourceLine>While InStr(sData, "&amp;") &gt; 0</SourceLine>
   <SourceLine>sKey = sData.GetLeftMost("=")</SourceLine>
   <SourceLine>sData = sData.DelLeftMost("=")</SourceLine>
   <SourceLine>sValue = sData.GetLeftMost("&amp;")</SourceLine>
   <SourceLine>sData = sData.DelLeftMost("&amp;")</SourceLine>
   <SourceLine>myRequest.dictPost.Value(sKey)=sValue</SourceLine>
   <SourceLine>Wend</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine>sData = ""</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Find a matching WebApp to handle the request and response</SourceLine>
   <SourceLine>Dim myResponse As New cResponse</SourceLine>
   <SourceLine>myResponse.Root = Me.HTTPServer.Root</SourceLine>
   <SourceLine>myResponse.Port = Me.HTTPServer.Port</SourceLine>
   <SourceLine>sPath = myRequest.Path</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Pass request and response objects to WebApp class to handle request</SourceLine>
   <SourceLine>If Me.HTTPServer.dictWebApps.HasKey(sPath) Then</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim myWebApp As ciWebApps = Me.HTTPServer.dictWebApps.Value(sPath)</SourceLine>
   <SourceLine>Dim myHTTPServer As cHTTPServer = Me.HTTPServer</SourceLine>
   <SourceLine>If myWebApp &lt;&gt; Nil Then</SourceLine>
   <SourceLine>myWebApp.HandleRequest myRequest, myResponse, myHTTPServer</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine>Else</SourceLine>
   <SourceLine>myResponse.Status = cHTTPServer.StatusNotFound</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// NetLingo bug, ensure buffer has at least one byte</SourceLine>
   <SourceLine>If myResponse.sBuffer.Len = 0 Then</SourceLine>
   <SourceLine>myResponse.sBuffer = myResponse.sBuffer +" "</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Add our content length response header</SourceLine>
   <SourceLine>myResponse.Headers.Value("Content-Length") = myResponse.sBuffer.LenB</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Write out our response following HTTP protocol</SourceLine>
   <SourceLine>Dim sOutput As String</SourceLine>
   <SourceLine>Dim nCount As Integer</SourceLine>
   <SourceLine>sOutput = "HTTP/1.1 " + myResponse.Status + Chr(13) + Chr(10)</SourceLine>
   <SourceLine>For nCount = 0 To myResponse.Headers.Count - 1</SourceLine>
   <SourceLine>sKey = myResponse.Headers.Key(nCount)</SourceLine>
   <SourceLine>sOutput = sOutput + sKey + ": " + myResponse.Headers.Value(sKey) + Chr(13) + Chr(10)</SourceLine>
   <SourceLine>Next nCount</SourceLine>
   <SourceLine>sOutput = sOutput + Chr(13) + Chr(10) + myResponse.sBuffer </SourceLine>
   <SourceLine>myResponse.sBuffer = ""</SourceLine>
   <SourceLine>Me.Write sOutput</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
 </HookInstance>
 <HookInstance>
  <ItemName>Error</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Error()</SourceLine>
   <SourceLine>''System.DebugLog "ClientSocket Error " + Str(Me.LastErrorCode)</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
 </HookInstance>
 <HookInstance>
  <ItemName>Connected</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Connected()</SourceLine>
   <SourceLine>''System.DebugLog "ClientSocket Connected " + Str(Me.Handle)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
 </HookInstance>
 <HookInstance>
  <ItemName>SendComplete</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub SendComplete(userAborted as Boolean)</SourceLine>
   <SourceLine>''System.DebugLog "ClientSocket Send Complete " + Str(Me.Handle)</SourceLine>
   <SourceLine>Me.Close</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
 </HookInstance>
 <HookInstance>
  <ItemName>SendProgress</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function SendProgress(bytesSent as Integer, bytesLeft as Integer) As Boolean</SourceLine>
   <SourceLine>''System.DebugLog "ClientSocket SendProgress"</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
 </HookInstance>
 <Property>
  <ItemName>HTTPServer</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>HTTPServer As cHTTPServer</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>HTTPServer As cHTTPServer</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Address</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Port</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Behavior</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
 </ViewBehavior>
</block>
<block type="Module" ID="766650367">
 <ObjName>cHTTPServer</ObjName>
 <ObjContainerID>2114636589</ObjContainerID>
 <IsClass>1</IsClass>
 <Superclass>ServerSocket</Superclass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <HookInstance>
  <ItemName>AddSocket</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function AddSocket() As TCPSocket</SourceLine>
   <SourceLine>// Create a socket for handling the client</SourceLine>
   <SourceLine>Dim clientSocket As New cClientSocket</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Add a reference back to us</SourceLine>
   <SourceLine>clientSocket.HTTPServer = Me</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Store the clientSocket in our pool</SourceLine>
   <SourceLine>Me.ClientSocketPool.Append clientSocket</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>''System.DebugLog "HTTPServer AddSocket " + Str(clientSocket.Handle)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Return the socket</SourceLine>
   <SourceLine>return clientSocket</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
 </HookInstance>
 <HookInstance>
  <ItemName>Error</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Error(ErrorCode as Integer)</SourceLine>
   <SourceLine>''System.DebugLog "HTTPServer Error"</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
 </HookInstance>
 <Method>
  <ItemName>Constructor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Constructor()</SourceLine>
   <SourceLine>// Define the root folder from the app folder</SourceLine>
   <SourceLine>Me.Root = App.ExecutableFile.Parent</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Allocate storage for web applications</SourceLine>
   <SourceLine>Me.dictWebApps = New Dictionary</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Start listening on port 80</SourceLine>
   <SourceLine>Me.MaximumSocketsConnected = 500</SourceLine>
   <SourceLine>Me.MinimumSocketsAvailable = 1</SourceLine>
   <SourceLine>Me.Port = 80</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Destructor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Destructor()</SourceLine>
   <SourceLine>// Stop listening</SourceLine>
   <SourceLine>If Me.IsListening Then Me.StopListening</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>GetMimeByExt</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function GetMimeByExt(sExt As String) As String</SourceLine>
   <SourceLine>// Return the mime type by the provided extension</SourceLine>
   <SourceLine>Select Case sExt</SourceLine>
   <SourceLine>Case "323"</SourceLine>
   <SourceLine>return "text/h323"</SourceLine>
   <SourceLine>Case "acx"</SourceLine>
   <SourceLine>return "application/internet-property-stream"</SourceLine>
   <SourceLine>Case "ai"</SourceLine>
   <SourceLine>return "application/postscript"</SourceLine>
   <SourceLine>Case "aif"</SourceLine>
   <SourceLine>return "audio/x-aiff"</SourceLine>
   <SourceLine>Case "aifc"</SourceLine>
   <SourceLine>return "audio/x-aiff"</SourceLine>
   <SourceLine>Case "aiff"</SourceLine>
   <SourceLine>return "audio/x-aiff"</SourceLine>
   <SourceLine>Case "asf", "asr", "asx"</SourceLine>
   <SourceLine>return "video/x-ms-asf"</SourceLine>
   <SourceLine>Case "au"</SourceLine>
   <SourceLine>return "audio/basic"</SourceLine>
   <SourceLine>Case "avi"</SourceLine>
   <SourceLine>return "video/x-msvideo"</SourceLine>
   <SourceLine>Case "axs"</SourceLine>
   <SourceLine>return "application/olescript"</SourceLine>
   <SourceLine>Case "bas"</SourceLine>
   <SourceLine>return "text/plain"</SourceLine>
   <SourceLine>Case "bcpio"</SourceLine>
   <SourceLine>return "application/x-bcpio"</SourceLine>
   <SourceLine>Case "bin"</SourceLine>
   <SourceLine>return "application/octet-stream"</SourceLine>
   <SourceLine>Case "bmp"</SourceLine>
   <SourceLine>return "image/bmp"</SourceLine>
   <SourceLine>Case "c"</SourceLine>
   <SourceLine>return "text/plain"</SourceLine>
   <SourceLine>Case "cat"</SourceLine>
   <SourceLine>return "application/vnd.ms-pkiseccat"</SourceLine>
   <SourceLine>Case "cdf"</SourceLine>
   <SourceLine>return "application/x-cdf"</SourceLine>
   <SourceLine>Case "cer"</SourceLine>
   <SourceLine>return "application/x-x509-ca-cert"</SourceLine>
   <SourceLine>Case "class"</SourceLine>
   <SourceLine>return "application/octet-stream"</SourceLine>
   <SourceLine>Case "clp"</SourceLine>
   <SourceLine>return "application/x-msclip"</SourceLine>
   <SourceLine>Case "cmx"</SourceLine>
   <SourceLine>return "image/x-cmx"</SourceLine>
   <SourceLine>Case "cod"</SourceLine>
   <SourceLine>return "image/cis-cod"</SourceLine>
   <SourceLine>Case "cpio"</SourceLine>
   <SourceLine>return "application/x-cpio"</SourceLine>
   <SourceLine>Case "crd"</SourceLine>
   <SourceLine>return "application/x-mscardfile"</SourceLine>
   <SourceLine>Case "crl"</SourceLine>
   <SourceLine>return "application/pkix-crl"</SourceLine>
   <SourceLine>Case "crt"</SourceLine>
   <SourceLine>return "application/x-x509-ca-cert"</SourceLine>
   <SourceLine>Case "csh"</SourceLine>
   <SourceLine>return "application/x-csh"</SourceLine>
   <SourceLine>Case "css"</SourceLine>
   <SourceLine>return "text/css"</SourceLine>
   <SourceLine>Case "dcr"</SourceLine>
   <SourceLine>return "application/x-director"</SourceLine>
   <SourceLine>Case "der"</SourceLine>
   <SourceLine>return "application/x-x509-ca-cert"</SourceLine>
   <SourceLine>Case "dir"</SourceLine>
   <SourceLine>return "application/x-director"</SourceLine>
   <SourceLine>Case "dll"</SourceLine>
   <SourceLine>return "application/x-msdownload"</SourceLine>
   <SourceLine>Case "dms"</SourceLine>
   <SourceLine>return "application/octet-stream"</SourceLine>
   <SourceLine>Case "doc", "dot"</SourceLine>
   <SourceLine>return "application/msword"</SourceLine>
   <SourceLine>Case "dvi"</SourceLine>
   <SourceLine>return "application/x-dvi"</SourceLine>
   <SourceLine>Case "dxr"</SourceLine>
   <SourceLine>return "application/x-director"</SourceLine>
   <SourceLine>Case "eps"</SourceLine>
   <SourceLine>return "application/postscript"</SourceLine>
   <SourceLine>Case "etx"</SourceLine>
   <SourceLine>return "text/x-setext"</SourceLine>
   <SourceLine>Case "evy"</SourceLine>
   <SourceLine>return "application/envoy"</SourceLine>
   <SourceLine>Case "exe"</SourceLine>
   <SourceLine>return "application/octet-stream"</SourceLine>
   <SourceLine>Case "fif"</SourceLine>
   <SourceLine>return "application/fractals"</SourceLine>
   <SourceLine>Case "flr"</SourceLine>
   <SourceLine>return "x-world/x-vrml"</SourceLine>
   <SourceLine>Case "gif"</SourceLine>
   <SourceLine>return "image/gif"</SourceLine>
   <SourceLine>Case "gtar"</SourceLine>
   <SourceLine>return "application/x-gtar"</SourceLine>
   <SourceLine>Case "gz"</SourceLine>
   <SourceLine>return "application/x-gzip"</SourceLine>
   <SourceLine>Case "h"</SourceLine>
   <SourceLine>return "text/plain"</SourceLine>
   <SourceLine>Case "hdf"</SourceLine>
   <SourceLine>return "application/x-hdf"</SourceLine>
   <SourceLine>Case "hlp"</SourceLine>
   <SourceLine>return "application/winhlp"</SourceLine>
   <SourceLine>Case "hqx"</SourceLine>
   <SourceLine>return "application/mac-binhex40"</SourceLine>
   <SourceLine>Case "hta"</SourceLine>
   <SourceLine>return "application/hta"</SourceLine>
   <SourceLine>Case "htc"</SourceLine>
   <SourceLine>return "text/x-component"</SourceLine>
   <SourceLine>Case "htm","html","stm","rbs","rbscript"</SourceLine>
   <SourceLine>return "text/html"</SourceLine>
   <SourceLine>Case "htt"</SourceLine>
   <SourceLine>return "text/webviewhtml"</SourceLine>
   <SourceLine>Case "ico"</SourceLine>
   <SourceLine>return "image/x-icon"</SourceLine>
   <SourceLine>Case "ief"</SourceLine>
   <SourceLine>return "image/ief"</SourceLine>
   <SourceLine>Case "iii"</SourceLine>
   <SourceLine>return "application/x-iphone"</SourceLine>
   <SourceLine>Case "ins", "isp"</SourceLine>
   <SourceLine>return "application/x-internet-signup"</SourceLine>
   <SourceLine>Case "jfif"</SourceLine>
   <SourceLine>return "image/pipeg"</SourceLine>
   <SourceLine>Case "jpe", "jpeg", "jpg"</SourceLine>
   <SourceLine>return "image/jpeg"</SourceLine>
   <SourceLine>Case "js"</SourceLine>
   <SourceLine>return "application/x-javascript"</SourceLine>
   <SourceLine>Case "latex"</SourceLine>
   <SourceLine>return "application/x-latex"</SourceLine>
   <SourceLine>Case "lha"</SourceLine>
   <SourceLine>return "application/octet-stream"</SourceLine>
   <SourceLine>Case "lsf", "lsx"</SourceLine>
   <SourceLine>return "video/x-la-asf"</SourceLine>
   <SourceLine>Case "lzh"</SourceLine>
   <SourceLine>return "application/octet-stream"</SourceLine>
   <SourceLine>Case "m13", "m14"</SourceLine>
   <SourceLine>return "application/x-msmediaview"</SourceLine>
   <SourceLine>Case "m3u"</SourceLine>
   <SourceLine>return "audio/x-mpegurl"</SourceLine>
   <SourceLine>Case "man"</SourceLine>
   <SourceLine>return "application/x-troff-man"</SourceLine>
   <SourceLine>Case "mdb"</SourceLine>
   <SourceLine>return "application/x-msaccess"</SourceLine>
   <SourceLine>Case "me"</SourceLine>
   <SourceLine>return "application/x-troff-me"</SourceLine>
   <SourceLine>Case "mht", "mhtml"</SourceLine>
   <SourceLine>return "message/rfc822"</SourceLine>
   <SourceLine>Case "mid"</SourceLine>
   <SourceLine>return "audio/mid"</SourceLine>
   <SourceLine>Case "mny"</SourceLine>
   <SourceLine>return "application/x-msmoney"</SourceLine>
   <SourceLine>Case "mov"</SourceLine>
   <SourceLine>return "video/quicktime"</SourceLine>
   <SourceLine>Case "movie"</SourceLine>
   <SourceLine>return "video/x-sgi-movie"</SourceLine>
   <SourceLine>return "video/mpeg"</SourceLine>
   <SourceLine>Case "mp3"</SourceLine>
   <SourceLine>return "audio/mpeg"</SourceLine>
   <SourceLine>Case "mp2", "mpa", "mpe", "mpeg", "mpg", "mpv2"</SourceLine>
   <SourceLine>return "video/mpeg"</SourceLine>
   <SourceLine>Case "mpp"</SourceLine>
   <SourceLine>return "application/vnd.ms-project"</SourceLine>
   <SourceLine>Case "ms"</SourceLine>
   <SourceLine>return "application/x-troff-ms"</SourceLine>
   <SourceLine>Case "mvb"</SourceLine>
   <SourceLine>return "application/x-msmediaview"</SourceLine>
   <SourceLine>Case "nws"</SourceLine>
   <SourceLine>return "message/rfc822"</SourceLine>
   <SourceLine>Case "oda"</SourceLine>
   <SourceLine>return "application/oda"</SourceLine>
   <SourceLine>Case "p10"</SourceLine>
   <SourceLine>return "application/pkcs10"</SourceLine>
   <SourceLine>Case "p12"</SourceLine>
   <SourceLine>return "application/x-pkcs12"</SourceLine>
   <SourceLine>Case "p7b"</SourceLine>
   <SourceLine>return "application/x-pkcs7-certificates"</SourceLine>
   <SourceLine>Case "p7c", "p7m"</SourceLine>
   <SourceLine>return "application/x-pkcs7-mime"</SourceLine>
   <SourceLine>Case "p7r"</SourceLine>
   <SourceLine>return "application/x-pkcs7-certreqresp"</SourceLine>
   <SourceLine>Case "p7s"</SourceLine>
   <SourceLine>return "application/x-pkcs7-signature"</SourceLine>
   <SourceLine>Case "pbm"</SourceLine>
   <SourceLine>return "image/x-portable-bitmap"</SourceLine>
   <SourceLine>Case "pdf"</SourceLine>
   <SourceLine>return "application/pdf"</SourceLine>
   <SourceLine>Case "pfx"</SourceLine>
   <SourceLine>return "application/x-pkcs12"</SourceLine>
   <SourceLine>Case "pgm"</SourceLine>
   <SourceLine>return "image/x-portable-graymap"</SourceLine>
   <SourceLine>Case "pko"</SourceLine>
   <SourceLine>return "application/ynd.ms-pkipko"</SourceLine>
   <SourceLine>Case "pma","pmc","pmr","pml","pmw"</SourceLine>
   <SourceLine>return "application/x-perfmon"</SourceLine>
   <SourceLine>Case "pnm"</SourceLine>
   <SourceLine>return "image/x-portable-anymap"</SourceLine>
   <SourceLine>Case "png"</SourceLine>
   <SourceLine>return "image/png"</SourceLine>
   <SourceLine>Case "pot,"</SourceLine>
   <SourceLine>return "application/vnd.ms-powerpoint"</SourceLine>
   <SourceLine>Case "ppm"</SourceLine>
   <SourceLine>return "image/x-portable-pixmap"</SourceLine>
   <SourceLine>Case "pps","ppt"</SourceLine>
   <SourceLine>return "application/vnd.ms-powerpoint"</SourceLine>
   <SourceLine>Case "prf"</SourceLine>
   <SourceLine>return "application/pics-rules"</SourceLine>
   <SourceLine>Case "ps"</SourceLine>
   <SourceLine>return "application/postscript"</SourceLine>
   <SourceLine>Case "pub"</SourceLine>
   <SourceLine>return "application/x-mspublisher"</SourceLine>
   <SourceLine>Case "qt"</SourceLine>
   <SourceLine>return "video/quicktime"</SourceLine>
   <SourceLine>Case "ra","ram"</SourceLine>
   <SourceLine>return "audio/x-pn-realaudio"</SourceLine>
   <SourceLine>Case "ras"</SourceLine>
   <SourceLine>return "image/x-cmu-raster"</SourceLine>
   <SourceLine>Case "rgb"</SourceLine>
   <SourceLine>return "image/x-rgb"</SourceLine>
   <SourceLine>Case "rmi"</SourceLine>
   <SourceLine>return "audio/mid"</SourceLine>
   <SourceLine>Case "roff"</SourceLine>
   <SourceLine>return "application/x-troff"</SourceLine>
   <SourceLine>Case "rtf"</SourceLine>
   <SourceLine>return "application/rtf"</SourceLine>
   <SourceLine>Case "rtx"</SourceLine>
   <SourceLine>return "text/richtext"</SourceLine>
   <SourceLine>Case "scd"</SourceLine>
   <SourceLine>return "application/x-msschedule"</SourceLine>
   <SourceLine>Case "sct"</SourceLine>
   <SourceLine>return "text/scriptlet"</SourceLine>
   <SourceLine>Case "setpay"</SourceLine>
   <SourceLine>return "application/set-payment-initiation"</SourceLine>
   <SourceLine>Case "setreg"</SourceLine>
   <SourceLine>return "application/set-registration-initiation"</SourceLine>
   <SourceLine>Case "sh"</SourceLine>
   <SourceLine>return "application/x-sh"</SourceLine>
   <SourceLine>Case "shar"</SourceLine>
   <SourceLine>return "application/x-shar"</SourceLine>
   <SourceLine>Case "sit"</SourceLine>
   <SourceLine>return "application/x-stuffit"</SourceLine>
   <SourceLine>Case "snd"</SourceLine>
   <SourceLine>return "audio/basic"</SourceLine>
   <SourceLine>Case "spc"</SourceLine>
   <SourceLine>return "application/x-pkcs7-certificates"</SourceLine>
   <SourceLine>Case "spl"</SourceLine>
   <SourceLine>return "application/futuresplash"</SourceLine>
   <SourceLine>Case "src"</SourceLine>
   <SourceLine>return "application/x-wais-source"</SourceLine>
   <SourceLine>Case "sst"</SourceLine>
   <SourceLine>return "application/vnd.ms-pkicertstore"</SourceLine>
   <SourceLine>Case "stl"</SourceLine>
   <SourceLine>return "application/vnd.ms-pkistl"</SourceLine>
   <SourceLine>Case "svg"</SourceLine>
   <SourceLine>return "image/svg+xml"</SourceLine>
   <SourceLine>Case "sv4cpio"</SourceLine>
   <SourceLine>return "application/x-sv4cpio"</SourceLine>
   <SourceLine>Case "sv4crc"</SourceLine>
   <SourceLine>return "application/x-sv4crc"</SourceLine>
   <SourceLine>Case "swf"</SourceLine>
   <SourceLine>return "application/x-shockwave-flash"</SourceLine>
   <SourceLine>Case "t"</SourceLine>
   <SourceLine>return "application/x-troff"</SourceLine>
   <SourceLine>Case "tar"</SourceLine>
   <SourceLine>return "application/x-tar"</SourceLine>
   <SourceLine>Case "tcl"</SourceLine>
   <SourceLine>return "application/x-tcl"</SourceLine>
   <SourceLine>Case "tex"</SourceLine>
   <SourceLine>return "application/x-tex"</SourceLine>
   <SourceLine>Case "texi"</SourceLine>
   <SourceLine>return "application/x-texinfo"</SourceLine>
   <SourceLine>Case "texinfo"</SourceLine>
   <SourceLine>return "application/x-texinfo"</SourceLine>
   <SourceLine>Case "tgz"</SourceLine>
   <SourceLine>return "application/x-compressed"</SourceLine>
   <SourceLine>Case "tif","tiff"</SourceLine>
   <SourceLine>return "image/tiff"</SourceLine>
   <SourceLine>Case "tr"</SourceLine>
   <SourceLine>return "application/x-troff"</SourceLine>
   <SourceLine>Case "trm"</SourceLine>
   <SourceLine>return "application/x-msterminal"</SourceLine>
   <SourceLine>Case "tsv"</SourceLine>
   <SourceLine>return "text/tab-separated-values"</SourceLine>
   <SourceLine>Case "txt"</SourceLine>
   <SourceLine>return "text/plain"</SourceLine>
   <SourceLine>Case "uls"</SourceLine>
   <SourceLine>return "text/iuls"</SourceLine>
   <SourceLine>Case "ustar"</SourceLine>
   <SourceLine>return "application/x-ustar"</SourceLine>
   <SourceLine>Case "vcf"</SourceLine>
   <SourceLine>return "text/x-vcard"</SourceLine>
   <SourceLine>Case "vrml"</SourceLine>
   <SourceLine>return "x-world/x-vrml"</SourceLine>
   <SourceLine>Case "wav"</SourceLine>
   <SourceLine>return "audio/x-wav"</SourceLine>
   <SourceLine>Case "wcm"</SourceLine>
   <SourceLine>return "application/vnd.ms-works"</SourceLine>
   <SourceLine>Case "wdb"</SourceLine>
   <SourceLine>return "application/vnd.ms-works"</SourceLine>
   <SourceLine>Case "wks"</SourceLine>
   <SourceLine>return "application/vnd.ms-works"</SourceLine>
   <SourceLine>Case "wmf"</SourceLine>
   <SourceLine>return "application/x-msmetafile"</SourceLine>
   <SourceLine>Case "wps"</SourceLine>
   <SourceLine>return "application/vnd.ms-works"</SourceLine>
   <SourceLine>Case "wri"</SourceLine>
   <SourceLine>return "application/x-mswrite"</SourceLine>
   <SourceLine>Case "wrl"</SourceLine>
   <SourceLine>return "x-world/x-vrml"</SourceLine>
   <SourceLine>Case "wrz"</SourceLine>
   <SourceLine>return "x-world/x-vrml"</SourceLine>
   <SourceLine>Case "xaf"</SourceLine>
   <SourceLine>return "x-world/x-vrml"</SourceLine>
   <SourceLine>Case "xbm"</SourceLine>
   <SourceLine>return "image/x-xbitmap"</SourceLine>
   <SourceLine>Case "xla","xlc","xlm","xls","xlt","xlw"</SourceLine>
   <SourceLine>return "application/vnd.ms-excel"</SourceLine>
   <SourceLine>Case "xof"</SourceLine>
   <SourceLine>return "x-world/x-vrml"</SourceLine>
   <SourceLine>Case "xpm"</SourceLine>
   <SourceLine>return "image/x-xpixmap"</SourceLine>
   <SourceLine>Case "xwd"</SourceLine>
   <SourceLine>return "image/x-xwindowdump"</SourceLine>
   <SourceLine>Case "z"</SourceLine>
   <SourceLine>return "application/x-compress"</SourceLine>
   <SourceLine>Case "zip"</SourceLine>
   <SourceLine>return "application/zip"</SourceLine>
   <SourceLine>Else</SourceLine>
   <SourceLine>return "application/octet-stream"</SourceLine>
   <SourceLine>End Select</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>sExt As String</ItemParams>
  <ItemResult>String</ItemResult>
 </Method>
 <Method>
  <ItemName>AddWebApp</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub AddWebApp(sURL As String, myWebApp As ciWebApps)</SourceLine>
   <SourceLine>// Add the given web application to the list of web applications to handle HTTP requests</SourceLine>
   <SourceLine>dictWebApps.Value(sURL) = myWebApp</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>sURL As String, myWebApp As ciWebApps</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>RemoveWebApp</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub RemoveWebApp(sURL As String)</SourceLine>
   <SourceLine>// Remove the web app by the given URL</SourceLine>
   <SourceLine>dictWebApps.Remove(sURL)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>sURL As String</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Property>
  <ItemName>Root</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Root As FolderItem</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>Root As FolderItem</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>ClientSocketPool()</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>ClientSocketPool() As cClientSocket</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>ClientSocketPool() As cClientSocket</ItemDeclaration>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>dictWebApps</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>dictWebApps As Dictionary</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>dictWebApps As Dictionary</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Port</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Behavior</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>MinimumSocketsAvailable</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Behavior</PropertyGroup>
   <PropertyValue>2</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>MaximumSocketsConnected</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Behavior</PropertyGroup>
   <PropertyValue>10</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>-2147483648</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
 </ViewBehavior>
 <Constant>
  <ItemName>StatusNotFound</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <TextEncoding>134217984</TextEncoding>
  <ItemName>StatusNotFound</ItemName>
  <ItemType>0</ItemType>
  <ItemDef>404 Not Found</ItemDef>
  <ItemFlags>0</ItemFlags>
 </Constant>
 <Constant>
  <ItemName>StatusOK</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <TextEncoding>134217984</TextEncoding>
  <ItemName>StatusOK</ItemName>
  <ItemType>0</ItemType>
  <ItemDef>200 OK</ItemDef>
  <ItemFlags>0</ItemFlags>
 </Constant>
 <Constant>
  <ItemName>StatusServerError</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <TextEncoding>134217984</TextEncoding>
  <ItemName>StatusServerError</ItemName>
  <ItemType>0</ItemType>
  <ItemDef>500 Server Error</ItemDef>
  <ItemFlags>0</ItemFlags>
 </Constant>
 <Constant>
  <ItemName>Version</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <TextEncoding>134217984</TextEncoding>
  <ItemName>Version</ItemName>
  <ItemType>2</ItemType>
  <ItemDef>1.0</ItemDef>
  <ItemFlags>0</ItemFlags>
 </Constant>
</block>
<block type="Module" ID="15781887">
 <ObjName>ciWebApps</ObjName>
 <ObjContainerID>2114636589</ObjContainerID>
 <IsClass>1</IsClass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>1</IsInterface>
 <Compatibility></Compatibility>
 <Method>
  <ItemName>HandleRequest</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub HandleRequest(ByRef Request As cRequest, ByRef Response As cResponse, ByRef HTTPServer As cHTTPServer)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>ByRef Request As cRequest, ByRef Response As cResponse, ByRef HTTPServer As cHTTPServer</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>-2147483648</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
 </ViewBehavior>
</block>
<block type="Module" ID="235046911">
 <ObjName>cRequest</ObjName>
 <ObjContainerID>2114636589</ObjContainerID>
 <IsClass>1</IsClass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <Method>
  <ItemName>Constructor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Constructor()</SourceLine>
   <SourceLine>// Create our dictionaries to hold our client request information</SourceLine>
   <SourceLine>Me.dictHeader = New Dictionary</SourceLine>
   <SourceLine>Me.dictQuery = New Dictionary</SourceLine>
   <SourceLine>Me.dictPost = New Dictionary</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Header</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Header(sKey As String) As String</SourceLine>
   <SourceLine>// Provide a method to return requested header data</SourceLine>
   <SourceLine>If Me.dictHeader.HasKey(sKey) Then</SourceLine>
   <SourceLine>return Me.dictHeader.value(sKey)</SourceLine>
   <SourceLine>Else</SourceLine>
   <SourceLine>return ""</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>sKey As String</ItemParams>
  <ItemResult>String</ItemResult>
 </Method>
 <Method>
  <ItemName>Query</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Query(sKey As String) As String</SourceLine>
   <SourceLine>// Provide a method to return requested query string data</SourceLine>
   <SourceLine>If Me.dictQuery.HasKey(EncodeURLComponent(sKey)) Then</SourceLine>
   <SourceLine>return DecodeURLComponent(Me.dictQuery.value(EncodeURLComponent(sKey)))</SourceLine>
   <SourceLine>Else</SourceLine>
   <SourceLine>return ""</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>sKey As String</ItemParams>
  <ItemResult>String</ItemResult>
 </Method>
 <Method>
  <ItemName>Destructor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Destructor()</SourceLine>
   <SourceLine>// Cleanup our internal objects</SourceLine>
   <SourceLine>Me.dictHeader = nil</SourceLine>
   <SourceLine>Me.dictQuery = nil</SourceLine>
   <SourceLine>Me.dictPost = nil</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Post</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Post(sKey As String) As String</SourceLine>
   <SourceLine>// Provide a method to return requested post string data</SourceLine>
   <SourceLine>If Me.dictPost.HasKey(EncodeURLComponent(sKey)) Then</SourceLine>
   <SourceLine>return DecodeURLComponent(Me.dictPost.value(EncodeURLComponent(sKey)))</SourceLine>
   <SourceLine>Else</SourceLine>
   <SourceLine>return ""</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>sKey As String</ItemParams>
  <ItemResult>String</ItemResult>
 </Method>
 <Property>
  <ItemName>Data</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Data As String</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>Data As String</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>dictHeader</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>dictHeader As Dictionary</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>dictHeader As Dictionary</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>dictQuery</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>dictQuery As Dictionary</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>dictQuery As Dictionary</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>Method</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Method As String</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>Method As String</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>Path</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Path As String</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>Path As String</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>Version</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Version As String</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>Version As String</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>dictPost</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>dictPost As Dictionary</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>dictPost As Dictionary</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>-2147483648</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>data</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>String</ItemType>
   <EditorType>MultiLineEditor</EditorType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>method</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>String</ItemType>
   <EditorType>MultiLineEditor</EditorType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>path</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>String</ItemType>
   <EditorType>MultiLineEditor</EditorType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>version</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>String</ItemType>
   <EditorType>MultiLineEditor</EditorType>
  </ViewProperty>
 </ViewBehavior>
</block>
<block type="Module" ID="1460916223">
 <ObjName>cResponse</ObjName>
 <ObjContainerID>2114636589</ObjContainerID>
 <IsClass>1</IsClass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <Method>
  <ItemName>Constructor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Constructor()</SourceLine>
   <SourceLine>// Prepare default headers</SourceLine>
   <SourceLine>Dim dNow As New Date</SourceLine>
   <SourceLine>Dim sDate As String</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dNow.GMTOffset = 0</SourceLine>
   <SourceLine>sDate = Left(dNow.LongDate, 3) + ", " + dNow.LongDate.DelRightMost(",").GetRightMost(" ") + " "</SourceLine>
   <SourceLine>sDate = sDate + Left(dNow.LongDate.DelLeftMost(", "),3) + " " + CStr(dNow.Year) + " "</SourceLine>
   <SourceLine>sDate = sDate + Format(dNow.Hour ,"00")+ ":" + Format(dNow.Minute,"00") + ":" + Format(dNow.Second, "00") + " GMT"</SourceLine>
   <SourceLine>Me.Headers = New Dictionary</SourceLine>
   <SourceLine>Me.Headers.Value("Date") = sDate</SourceLine>
   <SourceLine>Me.Headers.Value("Content-Type") = "text/html"</SourceLine>
   <SourceLine>Me.Status = cHTTPServer.StatusOK</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Write</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Write(sOut As String)</SourceLine>
   <SourceLine>// Append data to the buffer that will be output to client</SourceLine>
   <SourceLine>Me.sBuffer = Me.sBuffer + sOut</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>sOut As String</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Property>
  <ItemName>Headers</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Headers As Dictionary</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>Headers As Dictionary</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>sBuffer</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>sBuffer As String</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>sBuffer As String</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>Status</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Status As String</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>Status As String</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>Root</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Root As FolderItem</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>Root As FolderItem</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>Port</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Port As Integer</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>Port As Integer</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>-2147483648</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>sBuffer</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>String</ItemType>
   <EditorType>MultiLineEditor</EditorType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>status</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>String</ItemType>
   <EditorType>MultiLineEditor</EditorType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Port</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Integer</ItemType>
  </ViewProperty>
 </ViewBehavior>
</block>
<block type="Module" ID="1453129929">
 <ObjName>Extends_String</ObjName>
 <ObjContainerID>0</ObjContainerID>
 <IsClass>0</IsClass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <Method>
  <ItemName>AddLastSlash</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function AddLastSlash(Extends sInput As String) As String</SourceLine>
   <SourceLine>// Depending on the user platform, add the appropiate last slash</SourceLine>
   <SourceLine>// if it isn't there already.</SourceLine>
   <SourceLine>sInput = sInput.StripLastSlash</SourceLine>
   <SourceLine>#If TargetMacOS</SourceLine>
   <SourceLine>sInput.Append("/")</SourceLine>
   <SourceLine>#Else</SourceLine>
   <SourceLine>sInput.Append("\")</SourceLine>
   <SourceLine>#Endif</SourceLine>
   <SourceLine>Return sInput</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>Extends sInput As String</ItemParams>
  <ItemResult>String</ItemResult>
 </Method>
 <Method>
  <ItemName>Append</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Append(Extends ByRef sInput As String, sStuff As String)</SourceLine>
   <SourceLine>// Append additional string content to ourself</SourceLine>
   <SourceLine>sInput = sInput + sStuff</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>Extends ByRef sInput As String, sStuff As String</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>CountString</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function CountString(Extends sSubject As String, sSearch As String) As Integer</SourceLine>
   <SourceLine>// Return the number of occurances of sSearch in sSubject</SourceLine>
   <SourceLine>Dim nCount As Integer</SourceLine>
   <SourceLine>While InStr(sSubject, sSearch) &gt; 0</SourceLine>
   <SourceLine>sSubject = sSubject.DelLeftMost(sSearch)</SourceLine>
   <SourceLine>nCount = nCount + 1</SourceLine>
   <SourceLine>Wend</SourceLine>
   <SourceLine>Return nCount</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>Extends sSubject As String, sSearch As String</ItemParams>
  <ItemResult>Integer</ItemResult>
 </Method>
 <Method>
  <ItemName>DelLeftMost</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function DelLeftMost(Extends sInput As String, sFind As String) As String</SourceLine>
   <SourceLine>Dim n As Integer</SourceLine>
   <SourceLine>n = sInput.InStr(sFind)</SourceLine>
   <SourceLine>if (n &gt; 0) then</SourceLine>
   <SourceLine>return sInput.Right(Len(sInput) - n - Len(sFind) + 1)</SourceLine>
   <SourceLine>Else</SourceLine>
   <SourceLine>return sInput</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>Extends sInput As String, sFind As String</ItemParams>
  <ItemResult>String</ItemResult>
 </Method>
 <Method>
  <ItemName>DelRightMost</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function DelRightMost(Extends sInput As String, sFind As String) As String</SourceLine>
   <SourceLine>Dim n As Integer</SourceLine>
   <SourceLine>n = sInput.InStrRev(sFind)</SourceLine>
   <SourceLine>if (n &gt; 0) then</SourceLine>
   <SourceLine>Return sInput.Left(n-1)</SourceLine>
   <SourceLine>Else</SourceLine>
   <SourceLine>Return sInput</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>Extends sInput As String, sFind As String</ItemParams>
  <ItemResult>String</ItemResult>
 </Method>
 <Method>
  <ItemName>GetLeftMost</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function GetLeftMost(Extends sInput As String, sFind As String) As String</SourceLine>
   <SourceLine>Dim n As Integer</SourceLine>
   <SourceLine>n = sInput.InStr(sFind)</SourceLine>
   <SourceLine>if (n &gt; 0) Then</SourceLine>
   <SourceLine>return sInput.Left(n -1)</SourceLine>
   <SourceLine>Else</SourceLine>
   <SourceLine>If sInput = sFind Then</SourceLine>
   <SourceLine>return ""</SourceLine>
   <SourceLine>Else</SourceLine>
   <SourceLine>return sInput</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>Extends sInput As String, sFind As String</ItemParams>
  <ItemResult>String</ItemResult>
 </Method>
 <Method>
  <ItemName>GetRightMost</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function GetRightMost(Extends sInput As String, sFind As String) As String</SourceLine>
   <SourceLine>Dim n As Integer</SourceLine>
   <SourceLine>n = sInput.InStrRev(sFind)</SourceLine>
   <SourceLine>if (n &gt; 0) then</SourceLine>
   <SourceLine>return sInput.Right(Len(sInput) - (n + Len(sFind) -1))</SourceLine>
   <SourceLine>Else</SourceLine>
   <SourceLine>return sInput</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>Extends sInput As String, sFind As String</ItemParams>
  <ItemResult>String</ItemResult>
 </Method>
 <Method>
  <ItemName>InStrRev</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function InStrRev(Extends source As String, startPos As Integer = - 1, substr As String) As Integer</SourceLine>
   <SourceLine>// Similar to InStr, but searches backwards from the given position</SourceLine>
   <SourceLine>// (or if startPos = -1, then from the end of the string).</SourceLine>
   <SourceLine>// If substr can't be found, returns 0.</SourceLine>
   <SourceLine>Dim srcLen As Integer = source.Len</SourceLine>
   <SourceLine>if startPos = -1 then startPos = srcLen</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Here's an easy way...</SourceLine>
   <SourceLine>// There may be a faster implementation, but then again, there may not -- it probably</SourceLine>
   <SourceLine>// depends on the particulars of the data.</SourceLine>
   <SourceLine>Dim reversedSource As String = source.Reverse()</SourceLine>
   <SourceLine>Dim reversedSubstr As String = substr.Reverse()</SourceLine>
   <SourceLine>Dim reversedPos As Integer</SourceLine>
   <SourceLine>reversedPos = InStr( srcLen - startPos + 1, reversedSource, reversedSubstr )</SourceLine>
   <SourceLine>if reversedPos &lt; 1 then return 0</SourceLine>
   <SourceLine>return srcLen - reversedPos - substr.Len + 2</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>Extends source As String, startPos As Integer = - 1, substr As String</ItemParams>
  <ItemResult>Integer</ItemResult>
 </Method>
 <Method>
  <ItemName>Quoted</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Quoted(Extends source As String) As String</SourceLine>
   <SourceLine>// Return the string as quoted (surrounded by ASCII 34)</SourceLine>
   <SourceLine>Return Chr(34) + source + Chr(34)</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>Extends source As String</ItemParams>
  <ItemResult>String</ItemResult>
 </Method>
 <Method>
  <ItemName>Reverse</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Reverse(Extends s As String) As String</SourceLine>
   <SourceLine>// Return s with the characters in reverse order.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if Len(s) &lt; 2 then return s</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim characters() as String = Split( s, "" )</SourceLine>
   <SourceLine>Dim leftIndex as Integer = 0</SourceLine>
   <SourceLine>Dim rightIndex as Integer = UBound(characters)</SourceLine>
   <SourceLine>#pragma BackgroundTasks False</SourceLine>
   <SourceLine>While leftIndex &lt; rightIndex</SourceLine>
   <SourceLine>Dim temp as String = characters(leftIndex)</SourceLine>
   <SourceLine>characters(leftIndex) = characters(rightIndex)</SourceLine>
   <SourceLine>characters(rightIndex) = temp</SourceLine>
   <SourceLine>leftIndex = leftIndex + 1</SourceLine>
   <SourceLine>rightIndex = rightIndex - 1</SourceLine>
   <SourceLine>Wend</SourceLine>
   <SourceLine>Return Join( characters, "" )</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>Extends s As String</ItemParams>
  <ItemResult>String</ItemResult>
 </Method>
 <Method>
  <ItemName>StripLastSlash</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function StripLastSlash(Extends sInput As String) As String</SourceLine>
   <SourceLine>If Right(sInput, 1) = "/" Or Right(sInput, 1) = "\" Then</SourceLine>
   <SourceLine>sInput = Left(sInput, Len(sInput) -1)</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine>Return sInput</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>Extends sInput As String</ItemParams>
  <ItemResult>String</ItemResult>
 </Method>
 <Method>
  <ItemName>StripTags</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function StripTags(Extends sInput As String) As String</SourceLine>
   <SourceLine>// Removes markup tags &lt;something&gt; &lt;/else&gt;</SourceLine>
   <SourceLine>Dim sParse As String</SourceLine>
   <SourceLine>If Not (sInput.InStr("&lt;") &gt; 0 And sInput.InStr("&gt;") &gt; 0) Then</SourceLine>
   <SourceLine>Return sInput</SourceLine>
   <SourceLine>Else</SourceLine>
   <SourceLine>While sInput.InStr("&lt;") &gt; 0 And sInput.InStr("&gt;") &gt; 0</SourceLine>
   <SourceLine>sParse = sParse + sInput.GetLeftMost("&lt;")</SourceLine>
   <SourceLine>sInput = sInput.DelLeftMost("&gt;")</SourceLine>
   <SourceLine>Wend</SourceLine>
   <SourceLine>sParse = sParse + sInput</SourceLine>
   <SourceLine>Return sParse</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>Extends sInput As String</ItemParams>
  <ItemResult>String</ItemResult>
 </Method>
 <Method>
  <ItemName>RawURLEncode</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function RawURLEncode(Extends sInput As String) As String</SourceLine>
   <SourceLine>Dim n As Integer</SourceLine>
   <SourceLine>Const prefix = "00"</SourceLine>
   <SourceLine>sInput = sInput.ReplaceAll("%", "*~%")</SourceLine>
   <SourceLine>For n = 0 to 36</SourceLine>
   <SourceLine>sInput = sInput.ReplaceAll(Chr(n), "%" + Right(prefix + Hex(n), 2))</SourceLine>
   <SourceLine>Next n</SourceLine>
   <SourceLine>For n = 38 to 41</SourceLine>
   <SourceLine>sInput = sInput.ReplaceAll(Chr(n), "%" + Right(prefix + Hex(n), 2))</SourceLine>
   <SourceLine>Next n</SourceLine>
   <SourceLine>sInput = sInput.ReplaceAll(Chr(44), "%2C")</SourceLine>
   <SourceLine>For n = 58 to 63</SourceLine>
   <SourceLine>sInput = sInput.ReplaceAll(Chr(n), "%" + Right(prefix + Hex(n), 2))</SourceLine>
   <SourceLine>Next n</SourceLine>
   <SourceLine>For n = 91 to 94</SourceLine>
   <SourceLine>sInput = sInput.ReplaceAll(Chr(n), "%" + Right(prefix + Hex(n), 2))</SourceLine>
   <SourceLine>Next n</SourceLine>
   <SourceLine>sInput = sInput.ReplaceAll(Chr(96), "%60")</SourceLine>
   <SourceLine>For n = 123 to 127</SourceLine>
   <SourceLine>sInput = sInput.ReplaceAll(Chr(n), "%" + Right(prefix + Hex(n), 2))</SourceLine>
   <SourceLine>Next n</SourceLine>
   <SourceLine>sInput = sInput.ReplaceAll("*~%", "%25")</SourceLine>
   <SourceLine>Return sInput</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>Extends sInput As String</ItemParams>
  <ItemResult>String</ItemResult>
 </Method>
 <Method>
  <ItemName>RawURLDecode</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function RawURLDecode(Extends sInput As String) As String</SourceLine>
   <SourceLine>Dim n As Integer</SourceLine>
   <SourceLine>Const prefix = "00"</SourceLine>
   <SourceLine>For n = 0 to 255</SourceLine>
   <SourceLine>sInput = sInput.ReplaceAll("%" + Right(prefix + Hex(n), 2), Chr(n))</SourceLine>
   <SourceLine>Next n</SourceLine>
   <SourceLine>Return sInput</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>Extends sInput As String</ItemParams>
  <ItemResult>String</ItemResult>
 </Method>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>-2147483648</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
 </ViewBehavior>
</block>
<block type="Module" ID="1995174002">
 <ObjName>VCLI</ObjName>
 <ObjContainerID>0</ObjContainerID>
 <IsClass>1</IsClass>
 <Interfaces>ciWebApps</Interfaces>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <Method>
  <ItemName>HandleRequest</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub HandleRequest(ByRef Request As cRequest, ByRef Response As cResponse, ByRef HTTPServer As cHTTPServer)</SourceLine>
   <SourceLine>// Test security key</SourceLine>
   <SourceLine>Dim s As String = Request.Query("s")</SourceLine>
   <SourceLine>If s &lt;&gt; App.SecurityKey Then</SourceLine>
   <SourceLine>Print "Security key failed to authenticate" + App.EOL</SourceLine>
   <SourceLine>Response.Status = App.myHTTPServer.StatusServerError</SourceLine>
   <SourceLine>Exit Sub</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Parse arguments</SourceLine>
   <SourceLine>Dim jsArgs As JSONItem</SourceLine>
   <SourceLine>Try</SourceLine>
   <SourceLine>jsArgs = New JSONItem(Request.Query("o"))</SourceLine>
   <SourceLine>Catch e As JSONException</SourceLine>
   <SourceLine>Print "Missing GET parameter for JSON Object" + App.EOL</SourceLine>
   <SourceLine>Response.Status = App.myHTTPServer.StatusServerError</SourceLine>
   <SourceLine>Exit Sub</SourceLine>
   <SourceLine>End Try</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim id As String = jsArgs.Lookup("console_id", "") // Console ID</SourceLine>
   <SourceLine>Dim c As String = jsArgs.Lookup("command", "") // Command</SourceLine>
   <SourceLine>Dim w As String = jsArgs.Lookup("wait_for", "") // Wait for</SourceLine>
   <SourceLine>Dim a As String = jsArgs.Lookup("action", "") // Action</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Process the given action</SourceLine>
   <SourceLine>Dim myVShell As VShell</SourceLine>
   <SourceLine>Select Case jsArgs.Lookup("action", "")</SourceLine>
   <SourceLine>Case "add"</SourceLine>
   <SourceLine>// Add a command to the queue</SourceLine>
   <SourceLine>myVShell = App.Shells.Value(jsArgs.Lookup("console_id", ""))</SourceLine>
   <SourceLine>myVShell.Commands.Append(CStr(myVShell.CommandCount) + "|" + jsArgs.Lookup("command", ""))</SourceLine>
   <SourceLine>myVShell.Waits.Append(jsArgs.Lookup("wait_for", ""))</SourceLine>
   <SourceLine>myVShell.Results.Append("")</SourceLine>
   <SourceLine>Response.Write(CStr(myVShell.CommandCount))</SourceLine>
   <SourceLine>myVShell.CommandCount = myVShell.CommandCount + 1</SourceLine>
   <SourceLine>If myVShell.State = VShell.DONE Then myVShell.State = VShell.RUNNING</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Case "age"</SourceLine>
   <SourceLine>// Return the age in seconds</SourceLine>
   <SourceLine>Dim d As New Date</SourceLine>
   <SourceLine>myVShell = App.Shells.Value(jsArgs.Lookup("console_id", ""))</SourceLine>
   <SourceLine>Response.Write(CStr(d.TotalSeconds - myVShell.DOB.TotalSeconds))</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Case "close"</SourceLine>
   <SourceLine>// Close the given shell console</SourceLine>
   <SourceLine>myVShell = App.Shells.Value(jsArgs.Lookup("console_id", ""))</SourceLine>
   <SourceLine>myVShell.Write(Chr(3) + Chr(3)) // double ctrl+c</SourceLine>
   <SourceLine>myVShell.Write("exit" + App.EOL)</SourceLine>
   <SourceLine>myVShell.Close</SourceLine>
   <SourceLine>myVShell = Nil</SourceLine>
   <SourceLine>App.Shells.Remove(jsArgs.Lookup("console_id", ""))</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Case "create"</SourceLine>
   <SourceLine>// Create a new instance of a CLI</SourceLine>
   <SourceLine>myVShell = New VShell</SourceLine>
   <SourceLine>myVShell.DOB = New Date</SourceLine>
   <SourceLine>myVShell.Timeout = -1</SourceLine>
   <SourceLine>myVShell.Mode = 2</SourceLine>
   <SourceLine>If w &lt;&gt; "" Then</SourceLine>
   <SourceLine>myVShell.MaxTimeout = Val(jsArgs.Lookup("timeout", ""))</SourceLine>
   <SourceLine>myVShell.TimeUp = Val(jsArgs.Lookup("timeout", ""))</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine>myVShell.Commands.Append(CStr(myVShell.CommandCount) + "|" + jsArgs.Lookup("command", ""))</SourceLine>
   <SourceLine>myVShell.CommandCount = myVShell.CommandCount + 1</SourceLine>
   <SourceLine>myVShell.Waits.Append(jsArgs.Lookup("wait_for", ""))</SourceLine>
   <SourceLine>myVShell.Results.Append("")</SourceLine>
   <SourceLine>App.Shells.Value(id) = myVShell</SourceLine>
   <SourceLine>myVShell.State = VShell.RUNNING</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Case "ids"</SourceLine>
   <SourceLine>// Return all shell ids</SourceLine>
   <SourceLine>For Each ids As String In App.Shells.Keys</SourceLine>
   <SourceLine>Response.Write(CStr(ids) + App.EOL)</SourceLine>
   <SourceLine>Next</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Case "is_done"</SourceLine>
   <SourceLine>// Return if a given command is done or if everything is finished</SourceLine>
   <SourceLine>If App.Shells.HasKey(jsArgs.Lookup("console_id", "")) Then</SourceLine>
   <SourceLine>myVShell = App.Shells.Value(jsArgs.Lookup("console_id", ""))</SourceLine>
   <SourceLine>If w = "-1" Then</SourceLine>
   <SourceLine>If myVShell.State = VShell.DONE And myVShell.Commands.Ubound = -1 Then</SourceLine>
   <SourceLine>Response.Write("1")</SourceLine>
   <SourceLine>Else</SourceLine>
   <SourceLine>Response.Write("0")</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine>Else</SourceLine>
   <SourceLine>If myVShell.IsDone.InStr("," + jsArgs.Lookup("wait_for", "") + ",") &gt; 0 Then</SourceLine>
   <SourceLine>Response.Write("1")</SourceLine>
   <SourceLine>Else</SourceLine>
   <SourceLine>Response.Write("0")</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine>Else</SourceLine>
   <SourceLine>Response.Write("0")</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Case "quit"</SourceLine>
   <SourceLine>// Close all active shell consoles</SourceLine>
   <SourceLine>Dim aVShell As VShell</SourceLine>
   <SourceLine>For Each ids As String In App.Shells.Keys</SourceLine>
   <SourceLine>aVShell = App.Shells.Value(ids)</SourceLine>
   <SourceLine>aVShell.Write(Chr(3) + Chr(3)) // double ctrl+c</SourceLine>
   <SourceLine>aVShell.Write("exit" + App.EOL)</SourceLine>
   <SourceLine>aVShell.Close</SourceLine>
   <SourceLine>Next</SourceLine>
   <SourceLine>Response.Status = App.myHTTPServer.StatusOK</SourceLine>
   <SourceLine>App.myHTTPServer.StopListening</SourceLine>
   <SourceLine>App.ExitVCLI = true</SourceLine>
   <SourceLine>App.Shells.Clear</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Case "result"</SourceLine>
   <SourceLine>// Return the last result for a given command id or everything</SourceLine>
   <SourceLine>myVShell = App.Shells.Value(jsArgs.Lookup("console_id", ""))</SourceLine>
   <SourceLine>Dim ci As Integer = Val(jsArgs.Lookup("wait_for", ""))</SourceLine>
   <SourceLine>If ci &gt; -1 And ci &lt; myVShell.CommandCount Then</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Return a result from a given command</SourceLine>
   <SourceLine>Response.Write(myVShell.Results(ci))</SourceLine>
   <SourceLine>Else</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Return everything</SourceLine>
   <SourceLine>Dim sHistory As String</SourceLine>
   <SourceLine>For Each r As String in myVShell.Results</SourceLine>
   <SourceLine>sHistory = sHistory + r</SourceLine>
   <SourceLine>Next</SourceLine>
   <SourceLine>Response.Write(sHistory)</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Case Else</SourceLine>
   <SourceLine>Print "Missing action definition in JSON Object" + App.EOL</SourceLine>
   <SourceLine>Response.Status = App.myHTTPServer.StatusServerError</SourceLine>
   <SourceLine>Exit Sub</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Select</SourceLine>
   <SourceLine>Response.Status = App.myHTTPServer.StatusOK</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Exit Sub</SourceLine>
   <SourceLine>Exception err as RuntimeException</SourceLine>
   <SourceLine>Print "Runtime exception in HandleRequest" + App.EOL</SourceLine>
   <SourceLine>Response.Status = App.myHTTPServer.StatusServerError</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>ByRef Request As cRequest, ByRef Response As cResponse, ByRef HTTPServer As cHTTPServer</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>-2147483648</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
 </ViewBehavior>
</block>
<block type="Module" ID="173636359">
 <ObjName>VShell</ObjName>
 <ObjContainerID>0</ObjContainerID>
 <IsClass>1</IsClass>
 <Superclass>Shell</Superclass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <Property>
  <ItemName>DOB</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>DOB As Date</SourceLine>
   <SourceLine>Used to store the date that the shell console was created.</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>DOB As Date</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>Commands()</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Commands() As String</SourceLine>
   <SourceLine>Array containing the commands to execute on the given shell.</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>Commands() As String</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>Waits()</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Waits() As Variant</SourceLine>
   <SourceLine>Array containing the keyword string or seconds integer to wait for before continuing to the next command.</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>Waits() As Variant</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>LastResult</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>LastResult As String</SourceLine>
   <SourceLine>The last result recieved from the given shell instance.</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>LastResult As String</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>MaxTimeout</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>MaxTimeout As Integer</SourceLine>
   <SourceLine>Integer that represents the total number of seconds before a timeout will occur and the next command is processed. </SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>MaxTimeout As Integer = 60</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>TimeUp</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>TimeUp As Integer</SourceLine>
   <SourceLine>Integer representing the number of seconds left before a timeout will occur.</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>TimeUp As Integer = 60</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>Paused</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Paused As Boolean = True</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>Paused As Boolean = True</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>WaitFor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>WaitFor As Variant</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>WaitFor As Variant</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>State</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>State As Integer</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>State As Integer = 0</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>Results()</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Results() As String</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>Results() As String</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>CommandCount</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>CommandCount As Integer</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>CommandCount As Integer = 0</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>LastCommand</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>LastCommand As String</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>LastCommand As String</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>IsDone</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>IsDone As String</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>IsDone As String = ","</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>TimeOut</ObjName>
   <Visible>1</Visible>
   <ItemType>Integer</ItemType>
   <EditorType>Integer</EditorType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Mode</ObjName>
   <Visible>1</Visible>
   <ItemType>Integer</ItemType>
   <EditorType>Integer</EditorType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Arguments</ObjName>
   <Visible>1</Visible>
   <ItemType>String</ItemType>
   <EditorType>String</EditorType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Backend</ObjName>
   <Visible>1</Visible>
   <ItemType>String</ItemType>
   <EditorType>String</EditorType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Canonical</ObjName>
   <Visible>1</Visible>
   <ItemType>Boolean</ItemType>
   <EditorType>Boolean</EditorType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>LastResult</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>String</ItemType>
   <EditorType>MultiLineEditor</EditorType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>TimeUp</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <PropertyValue>60</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Paused</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <PropertyValue>False</PropertyValue>
   <ItemType>Boolean</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>State</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>MaxTimeout</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <PropertyValue>60</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>CommandCount</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>LastCommand</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>String</ItemType>
   <EditorType>MultiLineEditor</EditorType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>IsDone</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <PropertyValue>,</PropertyValue>
   <ItemType>String</ItemType>
   <EditorType>MultiLineEditor</EditorType>
  </ViewProperty>
 </ViewBehavior>
 <Constant>
  <ItemName>PENDING</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <TextEncoding>134217984</TextEncoding>
  <ItemName>PENDING</ItemName>
  <ItemType>2</ItemType>
  <ItemDef>1</ItemDef>
  <ItemFlags>0</ItemFlags>
 </Constant>
 <Constant>
  <ItemName>RUNNING</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <TextEncoding>134217984</TextEncoding>
  <ItemName>RUNNING</ItemName>
  <ItemType>2</ItemType>
  <ItemDef>2</ItemDef>
  <ItemFlags>0</ItemFlags>
 </Constant>
 <Constant>
  <ItemName>DONE</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <TextEncoding>134217984</TextEncoding>
  <ItemName>DONE</ItemName>
  <ItemType>2</ItemType>
  <ItemDef>3</ItemDef>
  <ItemFlags>0</ItemFlags>
 </Constant>
</block>
<block type="UIState" ID="0">
 <StudioWindowState>
  <Editors>
   <EditorCount>1</EditorCount>
   <Editor>
    <EditorIndex>0</EditorIndex>
    <EditorLocation>VCLI.HandleRequest</EditorLocation>
    <EditorPath></EditorPath>
    <EditingPartID>1995174002</EditingPartID>
   </Editor>
   <SelectedTab>0</SelectedTab>
  </Editors>
 </StudioWindowState>
</block>
</RBProject>
